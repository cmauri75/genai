/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import dev.langchain4j.data.message.ChatMessage;
import dev.langchain4j.data.message.SystemMessage;
import dev.langchain4j.data.message.UserMessage;
import dev.langchain4j.model.anthropic.AnthropicChatModel;
import dev.langchain4j.model.openai.OpenAiChatModel;
import dev.langchain4j.model.openai.OpenAiChatModelName;

import java.time.Duration;
import java.util.ArrayList;
import java.util.List;

import static dev.langchain4j.model.anthropic.AnthropicChatModelName.*;

public class App {

    public static void main(String[] args) {
        System.out.println("Starting....");
        //System.out.printf("%s%n", openAiEx());
        System.out.printf("%s%n", antropicAiChat());
    }

    private static String openAiEx() {
        var cmodel = OpenAiChatModel.builder()
                .apiKey(System.getenv("OPENAI_API_KEY"))
                .modelName(OpenAiChatModelName.GPT_4_1_MINI).timeout(Duration.ofSeconds(30))
                .maxTokens(1024)
                .build();
        List<ChatMessage> messages = new ArrayList<>();
        UserMessage usermsg = new UserMessage("How should I learn Java?");
        messages.add(usermsg);
        var answer = cmodel.chat(messages);
        return (answer.aiMessage().text()); // text() eliminates 'noise' results
    }

    private static String antropicAiChat() {
        var cmodel = AnthropicChatModel.builder().apiKey(System.getenv("ANTHROPIC_API_KEY"))
                .modelName(CLAUDE_3_5_HAIKU_20241022).timeout(Duration.ofSeconds(120))
                .maxTokens(256)
                .build();
        List<ChatMessage> messages = new ArrayList<>();
        SystemMessage sysmsg = new SystemMessage("""
                        You are a polite Java expert explaining concepts to a grammar school child.
                """);
        messages.add(sysmsg);
        UserMessage usrmsg = UserMessage.from("Why should I learn Java.");
        messages.add(usrmsg);
        var answer = cmodel.chat(messages);
        return (answer.aiMessage().text());
    }

}
